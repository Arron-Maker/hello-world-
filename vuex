创建一个store

import Vue from 'vue'
import Vuex from 'vuex'

Vue.use(Vuex)

const store = new Vuex.Store({
  state: {
    name: '张三'
  },

  // 触发变更 // 同步的
  mutations: {
    increment (state) {
      state.name = '李四'
    }
  }
})

export default store

main.js注入全局
// 用的时候
<button @click="click">click</button>
methods: {
    click () {
      this.$store.commit('increment') //用commit触发变更
    }
}

//获取的时候
* 第一种 *
computed: {
    name () {
      return this.$store.state.name
    }
}

* 第二种 *
import { mapState } from 'vuex'
computed: mapState({
    // 箭头函数可使代码更简练
    count: state => state.count,

    // 传字符串参数 'count' 等同于 `state => state.count`
    countAlias: 'count',

    // 为了能够使用 `this` 获取局部状态，必须使用常规函数
    countPlusLocalState (state) {
      return state.count + this.localCount
    }
})

* 第三种 *
computed: mapState([
  // 映射 this.count 为 store.state.count
  'count'
])

//actions
const store = new Vuex.Store({
  state: {
    name: '张三',
    data: []
  },

  // 触发变更
  mutations: {
    setData (state, action) {
      state.data = action
    }
  },
  actions: {
    onIncrement (context) {
      post('/Home/Apis/listWithPage')
        .then(res => {
          context.commit('setData', res)
        })
    }
  }
})

store.dispatch('onIncrement')

//代理
devServer: {
  proxy: {
    '/api': {
      target: 'https://blogs.zdldove.top',
      changeOrigin: true,
      ws: true,
      pathRewrite: {
        '^/api': ''
      }
    }
  }
}
