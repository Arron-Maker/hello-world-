import React, { Component } from 'react'
import { message, } from "antd"
import axios from 'axios'
import _ from 'loadsh'
import { withRouter } from 'react-router-dom'
 
export default @withRouter
class extends Component {
    constructor(props) {
        super(props)
        let cancelToken = axios.CancelToken
        const cancel = []
        const removePending = config => {
            for (let p in cancel) {
                if (cancel[p].u === config.url) {
                    cancel[p].f()
                }
            }
        }
 
        // 请求拦截器 发送一个请求之前
        axios.interceptors.request.use(config => {
            //在一个ajax发送前执行一下取消操作
            removePending(config)
            config.cancelToken = new cancelToken(c => {
                cancel.push({
                    f: c,
                    u: config.url,
                })
            })
            return config
        }, error => {
            return Promise.reject(error)
        })
 
        //添加响应拦截器
        axios.interceptors.response.use(response => {
            switch (response.status) {
                case 203:
                    message.warn('失误') //提示
                    this.props.history,push('/login') // window.location.href='/login'
                    break
            }
            return response
        }, error => {
            switch (_.get(error, 'response.error', '')) {
                case 500:
                    //跳转一个页面
                    break
 
                default:
                    break
            }
        })
 
    }
    render() {
        return <div />
    }
}
