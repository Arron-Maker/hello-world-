import React from 'react';
import ReactDOM from 'react-dom';
import { createStore, applyMiddleware, compose, combineReducers } from 'redux';
import { connect, Provider } from 'react-redux'
import thunk from 'redux-thunk';
import promise from 'redux-promise';
import { PersistGate } from 'redux-persist/lib/integration/react'
import { persistStore, persistReducer } from 'redux-persist'
import storage from 'redux-persist/lib/storage'
import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'
 
const defaultState = {
    name: '张三'
}
const reducer = (state = defaultState, action) => {
    switch (action.type) {
        case 'ADD':
            return { ...state, name: action.payload };
        default:
            return state;
    }
};
// 我要对哪些state做数据持久化
const rootPersistConfig = {
    key: 'root',
    storage: storage,
    stateReconciler: autoMergeLevel2,
}
const rootReducer = combineReducers({
    index: reducer,
    detaile: reducer,
})
// 第一个 配置 数据持久化的是数据
// 第二个参数是一个正常的 reducer
const myPersistReducer = persistReducer(
    rootPersistConfig,
    rootReducer,
)
const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose
const store = createStore(
    myPersistReducer,
    composeEnhancers((applyMiddleware(promise, thunk)))
)
 
@connect(store => ({
    name: store.name
}), {
    onClick: () => ({
        type: 'ADD',
        payload: '李四'
    })
})
 
class App extends React.Component {
    render() {
        const { name } = this.props
        return (
            <div className='box'>
                <button
                    onClick={this.props.onClick}
                >
                    点击
                </button>
                <h1>{name}</h1>
            </div>
        )
    }
}
 
ReactDOM.render(
    <Provider store={store}>
        <PersistGate loading={null} persistor={persistStore(store)}>
            <App />
        </PersistGate>
    </Provider>,
    document.getElementById('root'));
