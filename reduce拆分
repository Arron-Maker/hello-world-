/*  index.js  */

    import React from 'react'
    import ReactDOM from 'react-dom'
    import Router from './router'
    import { Provider } from 'react-redux'
    import { persistStore } from 'redux-persist'
    import { PersistGate } from 'redux-persist/lib/integration/react'
    import { store } from './store'
    import 'antd/dist/antd.css'
    import './index.css'

    ReactDOM.render(
      <Provider store={store}>
        <PersistGate loading={null} persistor={persistStore(store)}>
          <Router />
        </PersistGate>
      </Provider>,
      document.getElementById('root')
    )

    
/*  store.js  */

    import { createStore, applyMiddleware, compose, combineReducers } from 'redux'
    import promise from 'redux-promise'
    import thunk from 'redux-thunk'
    import { persistReducer } from 'redux-persist'
    import storage from 'redux-persist/lib/storage'
    import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'
    import { login } from './reducer'

    // 我要对哪些state做数据持久化
    const rootPersistConfig = {
      key: 'root',
      storage: storage,
      stateReconciler: autoMergeLevel2,
    }

    // 单独为 某个 reduce 做数据持久化
    const myPersistReducer = combineReducers({
      // persistReducer 做数据持久化
      login: persistReducer(
        rootPersistConfig,
        login
      ),
    })

    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose

    const store = createStore(
      myPersistReducer,
      composeEnhancers(applyMiddleware(promise, thunk))
    )

    export { store }
    
   /*  reduce login.js  */ 
   
   import { DOLOGIN } from '../constants/actionTypes'

    const initState = {
        token: '',
    }

    export default function (state = initState, action) {
        switch (action.type) {
            case DOLOGIN:
                return { ...state, token: action.payload }
            default:
                return state
        }
    }

    /*  action  */
    import { post, get } from '../utils/request'
    import { DOLOGIN } from '../constants/actionTypes'  //匹配的常量 单独的文件夹

    export const dologin = () => {
        return {
            type: DOLOGIN,
            payload: '',
        }
    }


