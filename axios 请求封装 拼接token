import axios from 'axios'
 
let cancelToken = axios.CancelToken
 
const cancel = []
 
const removePending = config => {
  for(let p in cancel){
    if (cancel[p].u === config.url) {
      cancel[p].f()
    }
  }
}
 
// 请求拦截器 发送一个请求之前
axios.interceptors.request.use(config => {
  //在一个ajax发送前执行一下取消操作
  removePending(config)
  config.cancelToken = new cancelToken(c => {
    cancel.push({ 
      f: c,
      u: config.url,
    })
  })
 
  // config.data = { ...config.data.data, key: '5d2878270550ac239657ffa54edd96ff' }     //拼key值放data里
  // config.headers = { ...config.headers, key: '5d2878270550ac239657ffa54edd96ff' }    //拼key值放headers里
  return config
}, error => {
  return Promise.reject(error)
})
 
//添加响应拦截器
axios.interceptors.response.use(response => {
  return response
 
}, error => {
  return Promise.reject(error)
})
 
export function request(endpoint, payload = {}) {
  return new Promise((resolve, reject) => {
    axios({
      method: 'post',
      baseURL: '/api',
      url: endpoint,
      headers: {
        token: '5d2878270550ac239657ffa54edd96ff',  //拼token值 推荐
      },
      data: payload
    })
    .then(response => {
      if (response.data.code === 200) {
        resolve(response.data)
      } else {
        reject('') 
      }
    })
    .catch(err => {
      reject(err)
    })
  })
}
 
